#cloud-config
# vim: syntax=yaml
#
# Run yum upgrade
package_upgrade: true

groups:
  - ehos
  - docker

users:
  - name: ehos
    primary_group: ehos
    system: true
    lock_passwd: false

# Run yum upgrade
package_upgrade: true

# Create custom condor configuration file to create an execute node
write_files:
# Create custom condor configuration file to create an execute node
-   content: |
        ##  What machine is your central manager?
        
        CONDOR_HOST = {master_ip}
        
        ##  This macro determines what daemons the condor_master will start and keep its watchful eyes on.
        ##  The list is a comma or space separated list of subsystem names
        
        DAEMON_LIST = COLLECTOR, MASTER, NEGOTIATOR, SCHEDD
        
        FLOCK_TO = $(CONDOR_HOST)
        ALLOW_NEGOTIATOR = $(FLOCK_TO)
        #ALLOW_WRITE = {ip_range}
        ALLOW_WRITE  = *
        ALLOW_READ = $(ALLOW_WRITE)
        UID_DOMAIN = {uid_domain}
        STARTER_ALLOW_RUNAS_OWNER = TRUE
        TRUST_UID_DOMAIN=TRUE
        SOFT_UID_DOMAIN = TRUE


        SEC_PASSWORD_FILE = $(LOCK)/pool_password
        SEC_DEFAULT_AUTHENTICATION = REQUIRED
        SEC_DEFAULT_AUTHENTICATION_METHODS = FS, PASSWORD
        #SEC_DAEMON_AUTHENTICATION = REQUIRED
        #SEC_DAEMON_INTEGRITY = REQUIRED
        #SEC_DAEMON_AUTHENTICATION_METHODS = PASSWORD

        #SEC_NEGOTIATOR_AUTHENTICATION = REQUIRED
        #SEC_NEGOTIATOR_INTEGRITY = REQUIRED
        #SEC_NEGOTIATOR_AUTHENTICATION_METHODS = PASSWORD
        SEC_CLIENT_AUTHENTICATION = REQUIRED
        SEC_CLIENT_AUTHENTICATION_METHODS = FS, PASSWORD
        #ALLOW_DAEMON = condor_pool@$(UID_DOMAIN),   condor@$(UID_DOMAIN)/$(IP_ADDRESS)

        NEGOTIATOR_INTERVAL = 5
    owner: root:root
    path: /etc/condor/00personal_condor.config
    permissions: '0644'
#{write_files}


runcmd:
  - yum install -y epel-release 

  - yum -y groupinstall "development tools"

  ## some editors and tools we need
  - yum install -y vim  nano wget lvm2 squashfs-tools python34 python34-pip python-pip autofs
  - yum install -y  python-devel libarchive-devel yum-utils device-mapper-persistent-data 

  - pip3 install --prefix /usr/local/ git+https://github.com/elixir-no-nels/ehos-python.git@v1.0.0-rc1
#  - systemctl enable ehos
#  - systemctl start  ehos


final_message: "The EHOS vm is up after $UPTIME seconds"


